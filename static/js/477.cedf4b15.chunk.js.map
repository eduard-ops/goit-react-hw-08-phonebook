{"version":3,"file":"static/js/477.cedf4b15.chunk.js","mappings":"8NACA,EAAuB,2BAAvB,EAAyD,2B,6BCW1C,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,IAAjC,eAAOK,EAAP,KAAaC,EAAb,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUH,EAAoB,EAApBA,KAAMI,EAAc,EAAdA,MACtC,OAAQJ,GACN,IAAK,QACH,OAAOH,EAASO,GAClB,IAAK,WACH,OAAOL,EAAYK,GACrB,IAAK,OACH,OAAOH,EAAQG,GACjB,QACE,SAgBN,OACE,iBAAKC,UAAWC,EAAhB,WACE,iJACA,kBAAMC,SAfW,SAAAC,GACnBA,EAAEC,iBACFhB,EAASiB,EAAAA,EAAAA,SAAwB,CAAEd,MAAAA,EAAOE,SAAAA,EAAUE,KAAAA,KACpDH,EAAS,IACTE,EAAY,IACZE,EAAQ,KAUwBI,UAAWC,EAAQK,aAAa,MAA9D,WACE,SAAC,KAAD,CACEC,SAAUV,EACVF,KAAK,OACLI,MAAOJ,EACPa,KAAK,OACLC,MAAM,OACNC,QAAQ,YAEV,SAAC,KAAD,CACEf,KAAK,QACLI,MAAOR,EACPgB,SAAUV,EACVW,KAAK,QACLC,MAAM,QACNC,QAAQ,YAEV,SAAC,KAAD,CACEX,MAAON,EACPE,KAAK,WACLa,KAAK,WACLD,SAAUV,EACVY,MAAM,WACNC,QAAQ,YAEV,SAACC,EAAA,EAAD,CAAQC,SAhCS,WACrB,GAAqB,KAAjBrB,EAAMsB,QAAqC,KAApBpB,EAASoB,OAAe,OAAO,EA+BpCC,GAAkBN,KAAK,SAASE,QAAQ,YAA1D","sources":["webpack://react-homework-template/./src/pages/RegisterPage/RegisterPage.module.css?fdcb","pages/RegisterPage/RegisterPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterPage_form__9iStY\",\"wrap\":\"RegisterPage_wrap__KrHfg\"};","import { useState } from 'react';\n\nimport { Input } from '../../UI/stylesUi';\n\nimport Button from '@mui/material/Button';\n\nimport s from './RegisterPage.module.css';\n\nimport { useDispatch } from 'react-redux';\n\nimport { authOperations } from 'redux/auth/auth-operations';\n\nexport default function RegisterPage() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      case 'name':\n        return setName(value);\n      default:\n        return;\n    }\n  };\n\n  const hundleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.register({ email, password, name }));\n    setEmail('');\n    setPassword('');\n    setName('');\n  };\n\n  const inspectInpusts = () => {\n    if (email.trim() === '' || password.trim() === '') return true;\n  };\n\n  return (\n    <div className={s.wrap}>\n      <h1>Страница регистрации</h1>\n      <form onSubmit={hundleSubmit} className={s.form} autoComplete=\"off\">\n        <Input\n          onChange={handleChange}\n          name=\"name\"\n          value={name}\n          type=\"text\"\n          label=\"Name\"\n          variant=\"filled\"\n        />\n        <Input\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n          type=\"email\"\n          label=\"Email\"\n          variant=\"filled\"\n        />\n        <Input\n          value={password}\n          name=\"password\"\n          type=\"password\"\n          onChange={handleChange}\n          label=\"Password\"\n          variant=\"filled\"\n        />\n        <Button disabled={inspectInpusts()} type=\"submit\" variant=\"contained\">\n          Register\n        </Button>\n      </form>\n    </div>\n  );\n}\n"],"names":["RegisterPage","dispatch","useDispatch","useState","email","setEmail","password","setPassword","name","setName","handleChange","target","value","className","s","onSubmit","e","preventDefault","authOperations","autoComplete","onChange","type","label","variant","Button","disabled","trim","inspectInpusts"],"sourceRoot":""}
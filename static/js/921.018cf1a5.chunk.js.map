{"version":3,"file":"static/js/921.018cf1a5.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Form/Form.module.css?89ba","components/Form/Form.js","webpack://react-homework-template/./src/components/Contacts/Contacts.module.css?5e71","webpack://react-homework-template/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.js","components/Contacts/Contacts.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","webpack://react-homework-template/./src/pages/ContactsPage/ContactsPage.module.css?0a45","pages/ContactsPage/ContactsPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Form_label__8nx+5\",\"form\":\"Form_form__e1yzW\",\"button\":\"Form_button__8NOIT\"};","import s from './Form.module.css';\n\nimport PropTypes from 'prop-types';\n\nimport { useState } from 'react';\n\nimport { toast } from 'react-toastify';\n\nimport { useGetContactsQuery } from 'redux/contacts/contactsRtkSlice';\n\nimport { BootstrapInput as Input } from 'UI/stylesUi';\n\nimport { CssLabel as Label } from 'UI/stylesUi';\n\nimport { ButtonContacts as AddButton } from 'UI/stylesUi';\n\nexport default function Form({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const { data: contacts } = useGetContactsQuery();\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'number':\n        setNumber(value);\n        break;\n      case 'name':\n        setName(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const cheakAddContact = name => {\n    const isValidate = contacts.find(item => item.name === name);\n    isValidate &&\n      toast.info(`${name} is already in contacts ⚠`, { theme: 'colored' });\n    return isValidate;\n  };\n\n  const handleSubmut = e => {\n    e.preventDefault();\n    const isValidate = cheakAddContact(name);\n    resetForm();\n    if (isValidate) return;\n    onSubmit({ name, number });\n    resetForm();\n  };\n\n  const inspectInpusts = () => {\n    if (name.trim() === '' || number.trim() === '') return true;\n  };\n\n  return (\n    <form onSubmit={handleSubmut} className={s.form}>\n      <Label shrink htmlFor=\"bootstrap-input\">\n        Name\n      </Label>\n      <Input\n        id=\"bootstrap-input\"\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={name}\n        onChange={handleChange}\n      />\n      <Label shrink htmlFor=\"bootstrap-input\">\n        Phone\n      </Label>\n      <Input\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        onChange={handleChange}\n        value={number}\n      />\n      <AddButton disabled={inspectInpusts()} variant=\"contained\" type=\"submit\">\n        Add contact\n      </AddButton>\n    </form>\n  );\n}\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Contacts_list__R3QeP\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactItem_item__gxreB\",\"tel\":\"ContactItem_tel__sDTM4\",\"button\":\"ContactItem_button__IRFBz\"};","import s from './ContactItem.module.css';\n\nimport PropTypes from 'prop-types';\n\nimport { useDeleteContactMutation } from 'redux/contacts/contactsRtkSlice';\n\nimport { ButtonCss as ButtonDelete } from 'UI/stylesUi';\n\nexport default function ContactItem({ id, name, phone }) {\n  const [deleteContact, res] = useDeleteContactMutation();\n\n  return (\n    <>\n      <li className={s.item}>\n        <p>\n          {name}: {phone}\n        </p>\n        <ButtonDelete\n          type=\"button\"\n          onClick={() => deleteContact(id)}\n          disabled={res.isLoading}\n        >\n          Удалить\n        </ButtonDelete>\n      </li>\n    </>\n  );\n}\n\nContactItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  phone: PropTypes.string,\n};\n","import s from './Contacts.module.css';\n\nimport PropTypes from 'prop-types';\n\nimport ContactItem from 'components/ContactItem';\n\nimport { useGetContactsQuery } from 'redux/contacts/contactsRtkSlice';\n\nimport Loader from 'components/Loader';\n\nconst style = {\n  minHeight: '0',\n};\n\nexport default function Contacts({ item }) {\n  const { isLoading } = useGetContactsQuery();\n\n  return (\n    <ul className={s.list}>\n      {isLoading ? (\n        <Loader style={style} />\n      ) : (\n        item.map(item => {\n          return (\n            <ContactItem\n              key={item.id}\n              id={item.id}\n              name={item.name}\n              phone={item.number}\n            />\n          );\n        })\n      )}\n    </ul>\n  );\n}\n\nContacts.propTypes = {\n  item: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      number: PropTypes.string,\n      id: PropTypes.string,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"wrap\":\"Filter_wrap__Rb02z\"};","import s from './Filter.module.css';\n\nimport { BootstrapInput as FilterInput } from 'UI/stylesUi';\n\nimport PropTypes from 'prop-types';\n\nexport default function Filter({ value, onChange }) {\n  return (\n    <div className={s.wrap}>\n      <h2>Find Contacts by name</h2>\n      <label className={s.label}>\n        <FilterInput value={value} onChange={e => onChange(e.target.value)} />\n      </label>\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"ContactsPage_wrap__9-5Ii\"};","import Form from '../../components/Form';\n\nimport Contacts from '../../components/Contacts';\n\nimport Filter from '../../components/Filter';\n\nimport { useState, useMemo } from 'react';\n\nimport { useAddContactMutation } from '../../redux/contacts/contactsRtkSlice';\n\nimport { useGetContactsQuery } from '../../redux/contacts/contactsRtkSlice';\n\nimport s from './ContactsPage.module.css';\n\nexport default function ContactsPage() {\n  const [addContact] = useAddContactMutation();\n  const [filter, setFilter] = useState('');\n  const { data: contacts } = useGetContactsQuery();\n  const createContact = async user => {\n    await addContact(user);\n  };\n  const filterContacts = useMemo(() => {\n    return (\n      contacts?.filter(({ name }) =>\n        name.toLowerCase().includes(filter.toLowerCase())\n      ) ?? []\n    );\n  }, [filter, contacts]);\n\n  return (\n    <div className={s.wrap}>\n      <h1>Your Phonebook</h1>\n      <Form onSubmit={createContact} />\n      <Filter value={filter} onChange={setFilter} />\n      <Contacts item={filterContacts} />\n    </div>\n  );\n}\n"],"names":["Form","onSubmit","useState","name","setName","number","setNumber","contacts","useGetContactsQuery","data","resetForm","handleChange","e","currentTarget","value","preventDefault","isValidate","find","item","toast","theme","cheakAddContact","className","s","shrink","htmlFor","id","type","pattern","title","required","onChange","disabled","trim","inspectInpusts","variant","ContactItem","phone","useDeleteContactMutation","deleteContact","res","onClick","isLoading","style","minHeight","Contacts","Loader","map","Filter","target","ContactsPage","useAddContactMutation","addContact","filter","setFilter","createContact","user","filterContacts","useMemo","toLowerCase","includes"],"sourceRoot":""}